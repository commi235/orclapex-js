/**
 * This namespace contains functions related to dialog, popup, and redirect functionality of Oracle Application Express.
 */
declare namespace apex.navigation {

  interface DialogOptions {
    /**
     * The title of the dialog. The default is the name of the page. This option only applies to a modal dialog.
     */
    titel? : string,
    /**
     * The height of dialog content area, in pixels. The default is 500. This option only applies to a non-modal dialog.
     */
    height? : number,
    /**
     * The width of window content area, in pixels. The default is 500. This option only applies to a non-modal dialog.
     */
    width? : number,
    /**
     * The maximum width of window content area, in pixels. The default is 1500.
     */
    maxWidth? : number,
    /**
     * If true (the default), the url will be opened in a modal dialog. If false, the url will be opened in a non-modal popup.
     */
    modal? : boolean,
    /**
     * Additional options supported by the underlying dialog implementation.
     * For example, to define jQuery UI Dialog attribute `resizable` set to `resizable:true`.
     * See Also : See jQuery UI documentation of Dialog widget for all other available options for a modal dialog. {@link http://api.jqueryui.com/dialog/ }
     */
    [key : string] : any
  }

  interface PopupOptions {
    /**
     * The page URL to open in the window. The default is "about:blank".
     */
    url? : string,
    /**
     * The name of the window. The default is "_blank", which opens a new unnamed window.
     */
    name? : string,
    /**
     * The height of window content area in pixels. The default is 600.
     */
    height? : number,
    /**
     * The width of window content area in pixels. The default is 600.
     */
    width? : number,
    /**
     * "yes" or "no". The default is "no".
     */
    scroll? : string,
    /**
     * "yes" or "no". The default is "yes".
     */
    resizable? : string,
    /**
     * "yes" or "no". The default is "no".
     */
    toolbar? : string,
    /**
     * "yes" or "no". The default is "no".
     */
    location? : string,
    /**
     * "yes" or "no". The default is "no".
     */
    statusbar? : string,
    /**
     * "yes" or "no". The default is "no".
     */
    menubar? : string
  }

  /**
   * <p>Opens the specified page ( pUrl ) in a dialog.  The <code class="prettyprint">modal</code> option determines if the page is
   * a modal page or a non-modal page.</p>
   *
   * <p>A modal page is loaded in an iframe using jQuery UI dialog widget.  It is an overlay window positioned within the same browser window.
   * When a modal dialog is active, the user is unable to interact with the rest of the page, until the dialog is closed.</p>
   *
   * <p>A non-modal page is loaded in a new window using the {@link aapex.navigation.popup} function.  A user can interact
   * with a non-modal dialog and content on the page.</p>
   *
   * <p class="important">Note: Typically this API call is generated by the server when the page target is a modal page or by using APEX_UTIL.PREPARE_URL.
   * At a minimum the url of the dialog page must be generated on the server so that the correct dialog checksum can be generated.</p>
   * 
   * @param {string} pUrl The URL of the page to load as a dialog.
   * @param {DialogOptions} pOptions Identifies the attributes of the dialog, such as height, width, maxWidth, title, modal.
   *   See interface {@link DialogOptions} for reference.
   * @param pCssClasses Identifies the CSS classes, if any, to be applied to the dialog, and appended on to the dialogClass attribute.
   * @param pTriggeringElement jQuery selector to identify the APEX page element opening the dialog.
   *   The event `apexafterclosedialog` is triggered on this page item
   */
  function dialog( pUrl : string, pOptions : DialogOptions, pCssClasses : string, pTriggeringElement : string ) : void;

  /**
   * Opens the given URL in a new typically named popup window. If a window with that name already exists, it is reused.
   * If no name is given or the name is "_blank" then a new unnamed popup window is opened.
   * The names "_self", "_parent" and "_top" should not be used.
   * The window name is made unique so that it cannot be shared with other apps.
   *
   * Every effort is made to focus the window. The intention is that the window will be a popup window and not a tab.
   * The default window features are such that most browsers should open a new window.
   *
   * Note: To avoid being suppressed by a popup blocker, call this from a click event handler on a link or a button.
   * 
   * @param {PopupOptions} pOptions Options for the Popup, for properties see {@link PopupOptions}
   */
  function popup( pOptions : PopupOptions ) : Object | null;

  /**
   * This namespace contains functions related to a dialog opened with {@link apex.navigation.dialog}.
   * All of the functions in the apex.navigation.dialog namespace need to be run in the context of the specified dialog page.
   */
  namespace dialog {

    interface DialogCloseHandlerOptions {
      handler$? : Object,
      dialog? : HTMLElement | Object,
      closeFunction? : Function
    }

    /**
     * Closes the dialog window.
     * @param pIsModal If true, then the dialog is identified as being modal. If false, then the dialog is identified as being non-modal.
     */
    function cancel( pIsModal : boolean ) : void;

    /**
     * Executes an action and then closes the dialog window.
     * @param pIsModal If true, then the dialog is identified as being modal. If false, then the dialog is identified as being non-modal.
     * @param pAction The action can be one of the following:
     *    <ul>
     *        <li>a URL which will trigger a redirect in the parent page</li>
     *        <li>a function to redirect to a different dialog page</li>
     *        <li>false to cancel the dialog</li>
     *        <li>an object of page items and values which will be exposed in the apexafterclosedialog event</li>
     *        <li>an array of page item names, the values will be gathered from the page items to create
     *         an object of page item values to be exposed in the apexafterclosedialog event</li>
     *    </ul>
     */
    function close( pIsModal : boolean, pAction? : string | Function | Object ) : void;

    /**
     * Fires the internal "close" event of a dialog which was registered with the registerCloseHandler when the dialog was opened.
     *
     * @deprecated since version 18.2
     * @param {jQuery} pHandler$ A jQuery object which has been used in the call to registerCloseHandler.
     * @param {Object} pAction The value which is passed into the {@link navigation.dialog.close} function.
     *   For properties see {@link apex.navigation.dialog.DialogCloseHandlerOptions}.
     */
    function fireCloseHandler( pHandler$ : JQuery, pAction : Object ) : void;

    function registerCloseHandler( pOptions : DialogCloseHandlerOptions ) : void;
  }

  /**
   * This namespace contains functions related to a popup window opened with {@link apex.navigation.popup}.
   */
  namespace popup {

    /**
     * Sets the value of the item in the parent window (pItem) with (pValue), and then closes the popup window.
     * This function should only be called from an Oracle Application Express page that has been opened as a popup window, via a call to {@link apex.navigation.popup},
     * where the call to {@link apex.navigation.popup} is originating from another Oracle Application Express page.
     * @param {HTMLElement | string} pItem The DOM Element or string id (item name) of the page item to be set with the value of `pValue`.
     * @param {string} pValue The value to be save to the page item referenced in `pItem`.
     */
    function close( pItem : HTMLElement | string, pValue : string ) : void;

  }
}
